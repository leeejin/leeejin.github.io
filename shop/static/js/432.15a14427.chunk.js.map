{"version":3,"file":"static/js/432.15a14427.chunk.js","mappings":"iLA+DA,UAjDA,WAMI,IAAIA,GAAMC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,CAAK,IAClCC,GAAWC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eACnC,OADU,KAAU,MAEhB,0BAII,UAAC,IAAK,YACF,4BACI,2BACI,wBAAI,OACJ,wBAAI,wBACJ,wBAAI,kBACJ,wBAAI,mCAGZ,2BAEQL,EAAIM,QAAQC,KAAI,SAACC,EAAGC,GAAC,OACjB,2BACI,wBAAKD,EAAEE,MACP,wBAAKF,EAAEG,SACP,wBAAKH,EAAEI,SACP,2BACI,mBAAQC,QAAS,WACbV,GAASW,EAAAA,EAAAA,IAAYN,EAAEE,IAC3B,EAAE,SAAC,OACH,mBAAQG,QAAS,WACbV,GAASY,EAAAA,EAAAA,IAAYP,EAAEE,IAC3B,EAAE,SAAC,WAVFD,EAaJ,UAQjC,C,iMCzDMO,EAAqBC,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WACzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBACpCN,GAAK,IACRR,UAAWW,EACXb,IAAKA,KAEP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAI1C,MAH0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAEtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CACA,OAAOA,CACT,IACA,K","sources":["page/Cart.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { Table } from 'react-bootstrap'\r\nimport { memo, useState,useMemo } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeName, increase } from './../store/userSlice.js';\r\nimport { changeCount, deleteCount } from './../store.js';\r\n\r\n// function 함수() { \r\n//     return 반복문10억번돌린결과\r\n//  }\r\n\r\n// let Child = memo(function () {\r\n//     console.log('재렌더링됨')\r\n//     return <div>자식임</div>\r\n// })\r\nfunction Cart() {\r\n\r\n    // let result =  useMemo(()=>{ \r\n    //     //컴포넌트 렌더링시 1회만 실행함 useEffect(html보여주는게 실행끝나면)랑 비슷함 근데 useMemo는 렌더링될때 \r\n    //     return 함수()\r\n    // },[state]);\r\n    let pro = useSelector((state) => state)\r\n    let dispatch = useDispatch() //store.js로 요청보내주는 함수\r\n    let [count, setCount] = useState(0);\r\n    return (\r\n        <div>\r\n            {/* {pro.user.name} {pro.user.age}의 장바구니 */}\r\n            {/* <Child count={count}></Child> */}\r\n            {/* <button onClick={() => setCount(count + 1)}>+</button> */}\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경하기</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        pro.product.map((p, i) =>\r\n                            <tr key={i}>\r\n                                <td>{p.id}</td>\r\n                                <td>{p.title}</td>\r\n                                <td>{p.count}</td>\r\n                                <td>\r\n                                    <button onClick={() => {\r\n                                        dispatch(changeCount(p.id))\r\n                                    }}>+</button>\r\n                                    <button onClick={() => {\r\n                                        dispatch(deleteCount(p.id))\r\n                                    }}>-</button>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        )\r\n                    }\r\n\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["pro","useSelector","state","dispatch","useDispatch","useState","product","map","p","i","id","title","count","onClick","changeCount","deleteCount","Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"sourceRoot":""}